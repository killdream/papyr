papyr.load(
[{"id":"boo","name":"boo","kind":"module","text":"Base primitives for prototypical Object Orientation.\n"},{"id":"boo/#aliases","name":"Aliases","kind":"group","parent":"boo"},{"id":"boo/#interfaces","name":"Interfaces","kind":"group","parent":"boo"},{"id":"boo/:t/DataObject","name":"DataObject","kind":"type","signatures":["{ \"to_data\" -> () -> Object }"],"parent":"boo/#interfaces"},{"id":"boo/:t/Mixin","name":"Mixin","kind":"type","signatures":[{"Object":"| DataObject"}],"parent":"boo/#interfaces"},{"id":"boo/#helpers","name":"Helpers (Internal)","kind":"group","parent":"boo"},{"id":"boo/copy_property","name":"copy_property","kind":"function","signatures":["Object, a:Object*, String -> a"],"parent":"boo/#helpers","text":"`(internal)` Copies a property from `source` to `target`.\n","language":"JavaScript","repository":"http://github.com/killdream/boo","copyright":"© 2011","authors":[{"name":"Quildreen \"Sorella\" Motta","email":"quildreen#gmail.com","website":"http://killdream.github.com/"}],"licence":"MIT","file":"lib/boo.js","line":59,"end-line":64,"code":"function copy_property(source, target, property) {\n  !has_getter_p?     target[property] = source[property]\n  : /* otherwise */  define(target, property, descriptor(source, property))\n\n  return target\n}\n"},{"id":"boo/data_obj_p","name":"data_obj_p","kind":"function","signatures":["a -> Bool"],"parent":"boo/#helpers","text":"`(internal)` Checks if the given subject matches the `DataObject` type.\n","language":"JavaScript","repository":"http://github.com/killdream/boo","copyright":"© 2011","authors":[{"name":"Quildreen \"Sorella\" Motta","email":"quildreen#gmail.com","website":"http://killdream.github.com/"}],"licence":"MIT","file":"lib/boo.js","line":71,"end-line":73,"code":"function data_obj_p(subject) {\n  return subject != null\n  &&     typeof subject.to_data == 'function' }\n"},{"id":"boo/resolve_mixins","name":"resolve_mixins","kind":"function","signatures":["Mixin -> Object"],"parent":"boo/#helpers","text":"`(internal)` Returns the proper object for the given mixin.\n","language":"JavaScript","repository":"http://github.com/killdream/boo","copyright":"© 2011","authors":[{"name":"Quildreen \"Sorella\" Motta","email":"quildreen#gmail.com","website":"http://killdream.github.com/"}],"licence":"MIT","file":"lib/boo.js","line":81,"end-line":83,"code":"function resolve_mixin(subject) {\n  return data_obj_p(subject)?  subject.to_data()\n  :      /* otherwise */       subject }\n"},{"id":"boo/fast_extend","name":"fast_extend","kind":"function","signatures":["a:Object*, [Mixin] -> a"],"parent":"boo/#helpers","text":"Extends the target Object with the provided mixins.\n\nThis function uses a right-most precedence rule, such that when there's a\nproperty conflict, the property defined in the last object wins.\n\n`DataObject`s, when used as mixins, are properly handled through the\n`resolve_mixin` function. This ensures `DataObject`s always yield a new\ninstance properly initialised.\n\n**warning**: low-level\n> This function is not meant to be called directly by from end-user\n> code. Use the `extend` function instead.\n","language":"JavaScript","repository":"http://github.com/killdream/boo","copyright":"© 2011","authors":[{"name":"Quildreen \"Sorella\" Motta","email":"quildreen#gmail.com","website":"http://killdream.github.com/"}],"licence":"MIT","file":"lib/boo.js","line":100,"end-line":109,"code":"function fast_extend(object, mixins) {\n  var i, j, len, mixin, props, key\n  for (i = 0, len = mixins.length; i < len; ++i) {\n    mixin = resolve_mixin(mixins[i])\n    props = keys(mixin)\n    for (j = props.length; j--;) {\n      key         = props[j]\n      copy_property(mixin, object, key) }}\n\n  return object }\n"},{"id":"boo/#basic-primitives","name":"Basic primitives","kind":"group","parent":"boo"},{"id":"boo/extend","name":"extend","kind":"function","signatures":["a:Object*, Mixin... -> a"],"parent":"boo/#basic-primitives","text":"Extends the target object with the provided mixins, using a right-most\nprecedence rule.\n\n### See also\n\n- [fast_extend](#!/show/boo/fast_extend): A lower level function.\n- [merge](#!/show/boo/merge): The pure version.\n","language":"JavaScript","repository":"http://github.com/killdream/boo","copyright":"© 2011","authors":[{"name":"Quildreen \"Sorella\" Motta","email":"quildreen#gmail.com","website":"http://killdream.github.com/"}],"licence":"MIT","file":"lib/boo.js","line":124,"end-line":125,"code":"function extend(target) {\n  return fast_extend(target, slice.call(arguments, 1)) }\n"},{"id":"boo/merge","name":"merge","kind":"function","signatures":["Mixin... -> Object"],"parent":"boo/#basic-primitives","text":"Creates a new object that merges the provided mixins, using a right-most\nprecedence rule.\n\n### See also\n\n- [extend](#!/show/boo/extend): The impure version.\n","language":"JavaScript","repository":"http://github.com/killdream/boo","copyright":"© 2011","authors":[{"name":"Quildreen \"Sorella\" Motta","email":"quildreen#gmail.com","website":"http://killdream.github.com/"}],"licence":"MIT","file":"lib/boo.js","line":136,"end-line":137,"code":"function merge() {\n  return fast_extend({}, arguments) }\n"},{"id":"boo/derive","name":"derive","kind":"function","signatures":["a:Object, Mixin... -> a <| b"],"parent":"boo/#basic-primitives","text":"Creates a new object inheriting from the given prototype, and extends the\nnew instance with the provided `Mixin`s.\n","language":"JavaScript","repository":"http://github.com/killdream/boo","copyright":"© 2011","authors":[{"name":"Quildreen \"Sorella\" Motta","email":"quildreen#gmail.com","website":"http://killdream.github.com/"}],"licence":"MIT","file":"lib/boo.js","line":145,"end-line":146,"code":"function derive(proto) {\n  return fast_extend(inherit(proto), slice.call(arguments, 1)) }\n"},{"id":"boo/make","name":"make","kind":"function","signatures":["a:Object, b... -> a <| c"],"parent":"boo/#basic-primitives","text":"Constructs a new instance of the given object, performing initialisation.\n\nIf the object provides an `init` function, that function is invoked to\ninitialise the new instance. If you don't want this, consider using\n[derive](#!/show/boo/derive) instead.\n","language":"JavaScript","repository":"http://github.com/killdream/boo","copyright":"© 2011","authors":[{"name":"Quildreen \"Sorella\" Motta","email":"quildreen#gmail.com","website":"http://killdream.github.com/"}],"licence":"MIT","file":"lib/boo.js","line":156,"end-line":157,"code":"function make(base) {\n  return Base.make.apply(base, slice.call(arguments, 1)) }\n"},{"id":"boo/#root-object","name":"Root object","kind":"group","parent":"boo"},{"id":"boo/Base","name":"Base","kind":"object","signatures":["Object <| Base"],"parent":"boo/#root-object","text":"Provides all of the previous primitive combinators in an easy OOP way.\n","language":"JavaScript","repository":"http://github.com/killdream/boo","copyright":"© 2011","authors":[{"name":"Quildreen \"Sorella\" Motta","email":"quildreen#gmail.com","website":"http://killdream.github.com/"}],"licence":"MIT","file":"lib/boo.js","line":166,"end-line":191,"code":"var Base = {\n\n  ////// Function make\n  // Constructs new instances of the object the function is being\n  // applied to.\n  //\n  // If the object provides an ``init`` function, that function is\n  // invoked to do initialisation on the new instance.\n  //\n  // make :: #this:Object, Any... -> Object <| this\n  make:\n  function _make() {\n    var result = inherit(this)\n    if (typeof result.init == 'function')\n      result.init.apply(result, arguments)\n\n    return result }\n\n  ////// Function derive\n  // Constructs a new object that inherits from the object this function\n  // is being applied to, and extends it with the provided mixins.\n  //\n  // derive :: #this:Object, Mixin... -> Object <| this\n, derive:\n  function _derive() {\n    return fast_extend(inherit(this), arguments) }}\n"},{"id":"boo/Base/make","name":"make","kind":"function","signatures":["#this:Object, a... -> this <| b"],"parent":"boo/Base","text":"Constructs a new instance of the given object, performing initialisation.\n\nIf the object provides an `init` function, that function is invoked to\ninitialise the new instance. If you don't want this, consider using\n[derive](#!/show/boo/Base/derive) instead.\n","language":"JavaScript","repository":"http://github.com/killdream/boo","copyright":"© 2011","authors":[{"name":"Quildreen \"Sorella\" Motta","email":"quildreen#gmail.com","website":"http://killdream.github.com/"}],"licence":"MIT","file":"lib/boo.js","line":176,"end-line":182,"code":"make:\nfunction _make() {\n  var result = inherit(this)\n  if (typeof result.init == 'function')\n    result.init.apply(result, arguments)\n\n  return result }\n"},{"id":"boo/Base/derive","name":"derive","kind":"function","signatures":["#this:Object, Mixin... -> this <| b"],"parent":"boo/Base","text":"Creates a new object inheriting from the given prototype, and extends the\nnew instance with the provided `Mixin`s.\n","language":"JavaScript","repository":"http://github.com/killdream/boo","copyright":"© 2011","authors":[{"name":"Quildreen \"Sorella\" Motta","email":"quildreen#gmail.com","website":"http://killdream.github.com/"}],"licence":"MIT","file":"lib/boo.js","line":189,"end-line":191,"code":", derive:\n  function _derive() {\n    return fast_extend(inherit(this), arguments) }}\n"},{"id":"boo/#exports","name":"Exports","kind":"group","parent":"boo"}]
)
